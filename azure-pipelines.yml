# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

  container: ubuntu:16.04

steps:
# - task: AzureResourceManagerTemplateDeployment@3
#deployment of the log Analytic worskpace
  # inputs:
    # deploymentScope: 'Resource Group'
    # azureResourceManagerConnection: 'Conexion_k8s'
    # subscriptionId: '714f1d31-e6fc-4955-acef-4e261636a95e'
    # action: 'Create Or Update Resource Group'
    # resourceGroupName: 'workspacek8bonita'
    # location: 'East US 2'
    # templateLocation: 'Linked artifact'
    # csmFile: './k8loganalytics/workspace-template.json'
    #csmParametersFile: './k8loganalytics/workspace-parameters.json'
    # deploymentMode: 'Incremental'

#- task: AzureCLI@2
 # inputs:
  #  azureSubscription: 'Conexion_k8s'
   # scriptType: 'bash'
    #scriptLocation: 'inlineScript'
    #inlineScript: |
     # az account set -s "Heloise Visual Studio" 
      #az ad app create --display-name k8prueba --homepage "http://localhost/k8prueba"
    # useGlobalConfig: true


- task: AzureResourceManagerTemplateDeployment@3
#deployment of the VNET for CNI network mapping on the pods
  displayName: VNET deployment
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Conexion_k8s'
    subscriptionId: '714f1d31-e6fc-4955-acef-4e261636a95e'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'zmxs1zu2rsgvnet001'
    location: 'East US 2'
    templateLocation: 'Linked artifact'
    csmFile: './k8vnet/vnet-template.json'
    csmParametersFile: './k8vnet/vnet-parameters.json'
    deploymentMode: 'Incremental'

- task: AzureResourceManagerTemplateDeployment@3
#assigning role permissions to Vnet for K8
  displayName: Role Asignement
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Conexion_k8s'
    subscriptionId: '714f1d31-e6fc-4955-acef-4e261636a95e'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'zmxs1zu2rsgvnet001'
    location: 'East US 2'
    templateLocation: 'Linked artifact'
    csmFile: './k8roles/k8-roleassignment.json'
    csmParametersFile: './k8roles/k8-roleassignment-parameters.json'
    deploymentMode: 'Incremental'

- task: AzureResourceManagerTemplateDeployment@3
#deployment of the k8 cluster
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Conexion_k8s'
    subscriptionId: '714f1d31-e6fc-4955-acef-4e261636a95e'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'zmxs1zu2rsgbonitacrit001'
    location: 'East US 2'
    templateLocation: 'Linked artifact'
    csmFile: './K8/k8-template.json'
    csmParametersFile: './K8/k8-parametersFile.json'
    deploymentMode: 'Incremental'

- task: AzureResourceManagerTemplateDeployment@3
#deployment of the storage account for postgres VM
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Conexion_k8s'
    subscriptionId: '714f1d31-e6fc-4955-acef-4e261636a95e'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'zmxs1zu2rsgbonitadb001'
    location: 'East US 2'
    templateLocation: 'Linked artifact'
    csmFile: './storage/storage-template.json'
    csmParametersFile: './storage/storage-parameters.json'
    deploymentMode: 'Incremental'

- task: AzureResourceManagerTemplateDeployment@3
  displayName: Database VM creation
#deployment of the DB VM
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Conexion_k8s'
    subscriptionId: '714f1d31-e6fc-4955-acef-4e261636a95e'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'zmxs1zu2rsgbonitadb001'
    location: 'East US 2'
    templateLocation: 'Linked artifact'
    csmFile: './bonitadb/bonitadb-template.json'
    csmParametersFile: './bonitadb/bonitadb-parameters.json'
    deploymentMode: 'Incremental'